name: Build and publish a Docker image to ghcr.io
on:
  workflow_dispatch: # Enables manual trigger

  # Publish on releases, e.g., v2.1.13 (image tagged as "2.1.13" - "v" prefix is removed)
  release:
    types: [published]

  # Publish on pushes to the main branch (image tagged as "latest")
  push:
    branches:
      - main
      - leocloud


jobs:
  docker_publish_backend:
    runs-on: "ubuntu-20.04"

    steps:
      - uses: actions/checkout@v2

      # Specify the Dockerfile and context for building the image
      - name: Build and publish a Docker image for ${{ github.repository }}
        uses: macbre/push-to-ghcr@master
        with:
          image_name: ${{ github.repository }}-backend  # it will be lowercased internally
          github_token: ${{ secrets.GHCR_TOKEN }}
          # Specify the context (path to the directory containing the Dockerfile)
          context: ./backend
          dockerfile: ./backend/Dockerfile
          # optionally push to the Docker Hub (docker.io)
          # docker_io_token: ${{ secrets.DOCKER_IO_ACCESS_TOKEN }}  # see https://hub.docker.com/settings/security
          # customize the username to be used when pushing to the Docker Hub
          # docker_io_user: foobar  # see https://github.com/macbre/push-to-ghcr/issues/14
  docker_publish_frontend:
    runs-on: "ubuntu-20.04"

    steps:
      - uses: actions/checkout@v2

      # Specify the Dockerfile and context for building the image
      - name: Build and publish a Docker image for ${{ github.repository }}
        uses: macbre/push-to-ghcr@master
        with:
          image_name: ${{ github.repository }}-frontend  # it will be lowercased internally
          github_token: ${{ secrets.GHCR_TOKEN }}
          # Specify the context (path to the directory containing the Dockerfile)
          context: ./frontend
          dockerfile: ./frontend/Dockerfile
          # optionally push to the Docker Hub (docker.io)
          # docker_io_token: ${{ secrets.DOCKER_IO_ACCESS_TOKEN }}  # see https://hub.docker.com/settings/security
          # customize the username to be used when pushing to the Docker Hub
          # docker_io_user: foobar  # see https://github.com/macbre/push-to-ghcr/issues/14ker push <DOCKER_REGISTRY>/quantum-backend:latest
 
  docker_publish_postgres:
    runs-on: ubuntu-20.04

    steps:
      # Step 1: Check out the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Log in to the GitHub Container Registry
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Step 3: Build and publish the PostgreSQL Docker image
      - name: Build and publish PostgreSQL Docker image
        uses: macbre/push-to-ghcr@master
        with:
          image_name: ${{ github.repository }}-postgres  # it will be lowercased internally
          github_token: ${{ secrets.GHCR_TOKEN }}
          context: ./db  # Path to the directory containing the Dockerfile
          dockerfile: ./db/Dockerfile  # Path to the Dockerfile

      #ADD IF EVERYTHING RUNS ON THE LEOCLOUD 
      # Step 4: Run the PostgreSQL container with secrets
      #- name: Run PostgreSQL container
      #  run: |
      #    docker run -d --name my-postgres \
      #      -e POSTGRES_DB=${{ secrets.POSTGRES_DB }} \
      #     -e POSTGRES_USER=${{ secrets.POSTGRES_USER }} \
      #      -e POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} \
      #      -p 5432:5432 \
      #      ghcr.io/${{ github.repository }}/postgres:latest

      # Step 5: Wait for PostgreSQL to be ready
      #- name: Wait for PostgreSQL to be ready
      #  run: |
      #    echo "Waiting for PostgreSQL to start..."
      #   while ! docker exec my-postgres pg_isready -U ${{ secrets.POSTGRES_USER }} -d ${{ secrets.POSTGRES_DB }}; do
      #      sleep 1
      #    done
      #    echo "PostgreSQL is ready!"
